/**
 * tilt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { V1alpha1UIBuildRunning } from './v1alpha1UIBuildRunning';
import { V1alpha1UIBuildTerminated } from './v1alpha1UIBuildTerminated';
import { V1alpha1UIResourceKubernetes } from './v1alpha1UIResourceKubernetes';
import { V1alpha1UIResourceLink } from './v1alpha1UIResourceLink';
import { V1alpha1UIResourceLocal } from './v1alpha1UIResourceLocal';
import { V1alpha1UIResourceTargetSpec } from './v1alpha1UIResourceTargetSpec';

/**
* UIResourceStatus defines the observed state of UIResource
*/
export class V1alpha1UIResourceStatus {
    /**
    * Past completed builds.
    */
    'buildHistory'?: Array<V1alpha1UIBuildTerminated>;
    'currentBuild'?: V1alpha1UIBuildRunning;
    /**
    * Links attached to this resource.
    */
    'endpointLinks'?: Array<V1alpha1UIResourceLink>;
    /**
    * True if the build was put in the pending queue due to file changes.
    */
    'hasPendingChanges'?: boolean;
    'k8sResourceInfo'?: V1alpha1UIResourceKubernetes;
    /**
    * The last time this resource was deployed.
    */
    'lastDeployTime'?: Date;
    'localResourceInfo'?: V1alpha1UIResourceLocal;
    /**
    * Order expresses the relative order of resources in the UI when they\'re not otherwise sorted. Lower integers go first. When two resources have the same order, they should be sorted by name.  When UIResources are generated from the Tiltfile, we use the order they were added to the Tiltfile for the Order field.
    */
    'order'?: number;
    /**
    * When the build was put in the pending queue.
    */
    'pendingBuildSince'?: Date;
    /**
    * Queued is a simple indicator of whether the resource is queued for an update.
    */
    'queued'?: boolean;
    /**
    * The RuntimeStatus is a simple, high-level summary of the runtime state of a server.  Not all resources run servers.
    */
    'runtimeStatus'?: string;
    /**
    * Information about all the target specs that this resource summarizes.
    */
    'specs'?: Array<V1alpha1UIResourceTargetSpec>;
    /**
    * Bit mask representing whether this resource is run when: 1) When a file changes 2) When the resource initializes
    */
    'triggerMode'?: number;
    /**
    * The UpdateStatus is a simple, high-level summary of any update tasks to bring the resource up-to-date.  If the resource runs a server, this may include both build tasks and live-update syncing.
    */
    'updateStatus'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "buildHistory",
            "baseName": "buildHistory",
            "type": "Array<V1alpha1UIBuildTerminated>"
        },
        {
            "name": "currentBuild",
            "baseName": "currentBuild",
            "type": "V1alpha1UIBuildRunning"
        },
        {
            "name": "endpointLinks",
            "baseName": "endpointLinks",
            "type": "Array<V1alpha1UIResourceLink>"
        },
        {
            "name": "hasPendingChanges",
            "baseName": "hasPendingChanges",
            "type": "boolean"
        },
        {
            "name": "k8sResourceInfo",
            "baseName": "k8sResourceInfo",
            "type": "V1alpha1UIResourceKubernetes"
        },
        {
            "name": "lastDeployTime",
            "baseName": "lastDeployTime",
            "type": "Date"
        },
        {
            "name": "localResourceInfo",
            "baseName": "localResourceInfo",
            "type": "V1alpha1UIResourceLocal"
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "number"
        },
        {
            "name": "pendingBuildSince",
            "baseName": "pendingBuildSince",
            "type": "Date"
        },
        {
            "name": "queued",
            "baseName": "queued",
            "type": "boolean"
        },
        {
            "name": "runtimeStatus",
            "baseName": "runtimeStatus",
            "type": "string"
        },
        {
            "name": "specs",
            "baseName": "specs",
            "type": "Array<V1alpha1UIResourceTargetSpec>"
        },
        {
            "name": "triggerMode",
            "baseName": "triggerMode",
            "type": "number"
        },
        {
            "name": "updateStatus",
            "baseName": "updateStatus",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1UIResourceStatus.attributeTypeMap;
    }
}

