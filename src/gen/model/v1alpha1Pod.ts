/**
 * tilt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.20.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { V1alpha1Container } from './v1alpha1Container';
import { V1alpha1PodCondition } from './v1alpha1PodCondition';

/**
* Pod is a collection of containers that can run on a host.  The Tilt API representation mirrors the Kubernetes API very closely. Irrelevant data is not included, and some fields might be simplified.  There might also be Tilt-specific status fields.
*/
export class V1alpha1Pod {
    /**
    * AncestorUID is the UID from the WatchRef that matched this Pod.  If the Pod matched based on extra label selectors, this will be empty.
    */
    'ancestorUID'?: string;
    /**
    * BaselineRestartCount is the number of restarts across all containers before Tilt started observing the Pod.  This is used to ignore restarts for a Pod that was already executing before the Tilt daemon started.
    */
    'baselineRestartCount': number;
    /**
    * Conditions are various lifecycle conditions for this Pod.  See also v1.PodCondition in the Kubernetes API.
    */
    'conditions'?: Array<V1alpha1PodCondition>;
    /**
    * Containers are the containers belonging to the Pod.
    */
    'containers': Array<V1alpha1Container>;
    /**
    * CreatedAt is when the Pod was created.
    */
    'createdAt': Date;
    /**
    * Deleting indicates that the Pod is in the process of being removed.
    */
    'deleting': boolean;
    /**
    * Errors are aggregated error messages for the Pod and its containers.
    */
    'errors': Array<string>;
    /**
    * InitContainers are containers executed prior to the Pod containers being executed.
    */
    'initContainers'?: Array<V1alpha1Container>;
    /**
    * Name is the Pod name within the K8s cluster.
    */
    'name': string;
    /**
    * Namespace is the Pod namespace within the K8s cluster.
    */
    'namespace': string;
    /**
    * Phase is where the Pod is at in its current lifecycle.  Valid values for this are v1.PodPhase values from the Kubernetes API.
    */
    'phase': string;
    /**
    * PodTemplateSpecHash is a hash of the Pod template spec.  Tilt uses this to associate Pods with the build that triggered them.
    */
    'podTemplateSpecHash'?: string;
    /**
    * Status is a concise description for the Pod\'s current state.  This is based off the status output from `kubectl get pod` and is not an \"enum-like\" value.
    */
    'status': string;
    /**
    * UID is the unique Pod UID within the K8s cluster.
    */
    'uid': string;
    /**
    * UpdateStartedAt is when Tilt started a deployment update for this Pod.
    */
    'updateStartedAt'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "ancestorUID",
            "baseName": "ancestorUID",
            "type": "string"
        },
        {
            "name": "baselineRestartCount",
            "baseName": "baselineRestartCount",
            "type": "number"
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<V1alpha1PodCondition>"
        },
        {
            "name": "containers",
            "baseName": "containers",
            "type": "Array<V1alpha1Container>"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date"
        },
        {
            "name": "deleting",
            "baseName": "deleting",
            "type": "boolean"
        },
        {
            "name": "errors",
            "baseName": "errors",
            "type": "Array<string>"
        },
        {
            "name": "initContainers",
            "baseName": "initContainers",
            "type": "Array<V1alpha1Container>"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "namespace",
            "baseName": "namespace",
            "type": "string"
        },
        {
            "name": "phase",
            "baseName": "phase",
            "type": "string"
        },
        {
            "name": "podTemplateSpecHash",
            "baseName": "podTemplateSpecHash",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "uid",
            "baseName": "uid",
            "type": "string"
        },
        {
            "name": "updateStartedAt",
            "baseName": "updateStartedAt",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1Pod.attributeTypeMap;
    }
}

