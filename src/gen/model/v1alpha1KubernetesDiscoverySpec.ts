/**
 * tilt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.20.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { V1LabelSelector } from './v1LabelSelector';
import { V1alpha1KubernetesWatchRef } from './v1alpha1KubernetesWatchRef';

/**
* KubernetesDiscoverySpec defines the desired state of KubernetesDiscovery
*/
export class V1alpha1KubernetesDiscoverySpec {
    /**
    * ExtraSelectors are label selectors that will force discovery of a Pod even if it does not match the AncestorUID.  This should only be necessary in the event that a CRD creates Pods but does not set an owner reference to itself.
    */
    'extraSelectors'?: Array<V1LabelSelector>;
    /**
    * Watches determine what resources are discovered.  If a discovered resource (e.g. Pod) matches the KubernetesWatchRef UID exactly, it will be reported. If a discovered resource is transitively owned by the KubernetesWatchRef UID, it will be reported.
    */
    'watches': Array<V1alpha1KubernetesWatchRef>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "extraSelectors",
            "baseName": "extraSelectors",
            "type": "Array<V1LabelSelector>"
        },
        {
            "name": "watches",
            "baseName": "watches",
            "type": "Array<V1alpha1KubernetesWatchRef>"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1KubernetesDiscoverySpec.attributeTypeMap;
    }
}

