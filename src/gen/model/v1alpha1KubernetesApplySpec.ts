/**
 * tilt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { V1alpha1KubernetesDiscoveryTemplateSpec } from './v1alpha1KubernetesDiscoveryTemplateSpec';
import { V1alpha1KubernetesImageLocator } from './v1alpha1KubernetesImageLocator';
import { V1alpha1PodLogStreamTemplateSpec } from './v1alpha1PodLogStreamTemplateSpec';
import { V1alpha1PortForwardTemplateSpec } from './v1alpha1PortForwardTemplateSpec';

/**
* KubernetesApplySpec defines the desired state of KubernetesApply
*/
export class V1alpha1KubernetesApplySpec {
    /**
    * Descriptors of how to find images in the YAML.  Needed when injecting images into CRDs.
    */
    'imageLocators'?: Array<V1alpha1KubernetesImageLocator>;
    /**
    * Names of image maps that this applier depends on.  The controller will watch all the image maps, and redeploy the entire YAML if any of the maps resolve to a new image.
    */
    'imageMaps'?: Array<string>;
    'kubernetesDiscoveryTemplateSpec'?: V1alpha1KubernetesDiscoveryTemplateSpec;
    'podLogStreamTemplateSpec'?: V1alpha1PodLogStreamTemplateSpec;
    'portForwardTemplateSpec'?: V1alpha1PortForwardTemplateSpec;
    /**
    * The timeout on the apply operation.  We\'ve had problems with both: 1) CRD apiservers that take an arbitrarily long time to apply, and 2) Infinite loops in the apimachinery So we offer the ability to set a timeout on Kubernetes apply operations.  The default timeout is 30s.
    */
    'timeout'?: string;
    /**
    * The YAML to apply to the cluster. Required.
    */
    'yaml': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "imageLocators",
            "baseName": "imageLocators",
            "type": "Array<V1alpha1KubernetesImageLocator>"
        },
        {
            "name": "imageMaps",
            "baseName": "imageMaps",
            "type": "Array<string>"
        },
        {
            "name": "kubernetesDiscoveryTemplateSpec",
            "baseName": "kubernetesDiscoveryTemplateSpec",
            "type": "V1alpha1KubernetesDiscoveryTemplateSpec"
        },
        {
            "name": "podLogStreamTemplateSpec",
            "baseName": "podLogStreamTemplateSpec",
            "type": "V1alpha1PodLogStreamTemplateSpec"
        },
        {
            "name": "portForwardTemplateSpec",
            "baseName": "portForwardTemplateSpec",
            "type": "V1alpha1PortForwardTemplateSpec"
        },
        {
            "name": "timeout",
            "baseName": "timeout",
            "type": "string"
        },
        {
            "name": "yaml",
            "baseName": "yaml",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1KubernetesApplySpec.attributeTypeMap;
    }
}

