/**
 * tilt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { V1alpha1UIComponentLocation } from './v1alpha1UIComponentLocation';
import { V1alpha1UIInputSpec } from './v1alpha1UIInputSpec';

/**
* UIButtonSpec defines the desired state of UIButton
*/
export class V1alpha1UIButtonSpec {
    /**
    * If true, the button will be rendered, but with an effect indicating it\'s disabled. It will also be unclickable.
    */
    'disabled'?: boolean;
    /**
    * IconName is a Material Icon to appear next to button text or on the button itself (depending on button location).  Valid values are icon font ligature names from the Material Icons set. See https://fonts.google.com/icons for the full list of available icons.  If both IconSVG and IconName are specified, IconSVG will take precedence.
    */
    'iconName'?: string;
    /**
    * IconSVG is an SVG to use as the icon to appear next to button text or on the button itself (depending on button location).  This should be an <svg> element scaled for a 24x24 viewport.  If both IconSVG and IconName are specified, IconSVG will take precedence.
    */
    'iconSVG'?: string;
    /**
    * Any inputs for this button.
    */
    'inputs'?: Array<V1alpha1UIInputSpec>;
    'location': V1alpha1UIComponentLocation;
    /**
    * Text to appear on the button itself or as hover text (depending on button location).
    */
    'text': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "disabled",
            "baseName": "disabled",
            "type": "boolean"
        },
        {
            "name": "iconName",
            "baseName": "iconName",
            "type": "string"
        },
        {
            "name": "iconSVG",
            "baseName": "iconSVG",
            "type": "string"
        },
        {
            "name": "inputs",
            "baseName": "inputs",
            "type": "Array<V1alpha1UIInputSpec>"
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "V1alpha1UIComponentLocation"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1UIButtonSpec.attributeTypeMap;
    }
}

